//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceApp.Domain.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ServiceAppDBContext : DbContext
    {
        public ServiceAppDBContext()
            : base("name=ServiceAppDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<EngineerMembership> EngineerMemberships { get; set; }
        public virtual DbSet<ServiceRequest> ServiceRequests { get; set; }
        public virtual DbSet<ServiceTypeMaster> ServiceTypeMasters { get; set; }
        public virtual DbSet<StatusTypeMaster> StatusTypeMasters { get; set; }
    
        public virtual ObjectResult<GETENGINEERDETAILS_Result> GETENGINEERDETAILS(Nullable<int> pServiceTypeID, Nullable<int> pStatusTypeID, string pLandmark, string pRemark, string pCreatedUserID, Nullable<int> pPincode)
        {
            var pServiceTypeIDParameter = pServiceTypeID.HasValue ?
                new ObjectParameter("PServiceTypeID", pServiceTypeID) :
                new ObjectParameter("PServiceTypeID", typeof(int));
    
            var pStatusTypeIDParameter = pStatusTypeID.HasValue ?
                new ObjectParameter("PStatusTypeID", pStatusTypeID) :
                new ObjectParameter("PStatusTypeID", typeof(int));
    
            var pLandmarkParameter = pLandmark != null ?
                new ObjectParameter("PLandmark", pLandmark) :
                new ObjectParameter("PLandmark", typeof(string));
    
            var pRemarkParameter = pRemark != null ?
                new ObjectParameter("PRemark", pRemark) :
                new ObjectParameter("PRemark", typeof(string));
    
            var pCreatedUserIDParameter = pCreatedUserID != null ?
                new ObjectParameter("PCreatedUserID", pCreatedUserID) :
                new ObjectParameter("PCreatedUserID", typeof(string));
    
            var pPincodeParameter = pPincode.HasValue ?
                new ObjectParameter("PPincode", pPincode) :
                new ObjectParameter("PPincode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETENGINEERDETAILS_Result>("GETENGINEERDETAILS", pServiceTypeIDParameter, pStatusTypeIDParameter, pLandmarkParameter, pRemarkParameter, pCreatedUserIDParameter, pPincodeParameter);
        }
    }
}
