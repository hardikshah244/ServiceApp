  SELECT USERS.Name,USERS.Email
	FROM AspNetUsers USERS	
	INNER JOIN AspNetUserRoles USERROLES ON  USERROLES.UserId = USERS.Id
	INNER JOIN AspNetRoles ROLES ON USERROLES.RoleId = ROLES.Id AND ROLES.Name = 'Engineer'
	INNER JOIN EngineerMembership MEMBERSHIP ON MEMBERSHIP.UserId = USERS.Id	
	WHERE USERS.IsActive = 1
	AND ((MEMBERSHIP.StartDate IS NULL AND MEMBERSHIP.EndDate IS NULL)
			OR MEMBERSHIP.EndDate >= GETDATE())
	AND USERS.Id NOT IN (SELECT UpdatedUserID
							FROM ServiceRequest
							WHERE UpdatedUserID IS NOT NULL
							AND StatusTypeID IN (1,2)
							)
	AND USERS.Pincode BETWEEN USERS.Pincode - 5 AND USERS.Pincode + 5;


	

	

SELECT UpdatedUserID
	FROM ServiceRequest
	WHERE UpdatedUserID IS NOT NULL
	AND StatusTypeID IN (1,2);
	
	Elmah.ErrorSignal.FromCurrentContext().Raise(new Exception(ex.Message, ex.InnerException));
	
	1	2	testing	testing	NULL	2016-04-05 21:52:05.307	05d22bb6-28bd-4073-b261-42c5dfc7fede	2016-04-05 21:52:05.307	
	
	ENGiNEERS
	==============
	1aa5a2b0-379d-4ed9-be04-1c9d41c22fc1
	fe9b9794-3189-422d-93e7-47450652de4f
	
	
	User Management
================

SELECT EMAIL,PhoneNumber,CASE WHEN IsActive = 1 THEN 'True' ELSE 'False' END IsActive,ROLE.NAME 
FROM AspNetUsers USERS,AspNetUserRoles ROLES,AspNetRoles ROLE
WHERE USERS.ID=ROLES.UserId
AND ROLES.RoleId = ROLE.Id
AND ROLE.NAME <> 'Admin';